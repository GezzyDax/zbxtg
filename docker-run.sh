#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Zabbix Telegram Bot –≤ Docker

set -e

echo "üê≥ Zabbix Telegram Bot - Docker –∑–∞–ø—É—Å–∫"
echo ""

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º USER_ID –∏ GROUP_ID –¥–ª—è Docker
export USER_ID=$(id -u)
export GROUP_ID=$(id -g)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
mkdir -p logs
chmod 755 logs

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º docker compose"
    COMPOSE_CMD="docker compose"
else
    COMPOSE_CMD="docker-compose"
fi

case "${1:-start}" in
    "build")
        echo "üî® –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑..."
        $COMPOSE_CMD build --no-cache
        ;;
    "start")
        echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç..."
        $COMPOSE_CMD up -d
        echo ""
        echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
        echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: $0 logs"
        echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $0 stop"
        ;;
    "stop")
        echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç..."
        $COMPOSE_CMD down
        echo "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    "restart")
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç..."
        $COMPOSE_CMD down
        $COMPOSE_CMD up -d
        echo "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        ;;
    "logs")
        echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
        $COMPOSE_CMD logs -f zbxtg
        ;;
    "status")
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
        $COMPOSE_CMD ps
        ;;
    "shell")
        echo "üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
        $COMPOSE_CMD exec zbxtg /bin/bash
        ;;
    "clean")
        echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
        $COMPOSE_CMD down -v --remove-orphans
        docker image prune -f
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|logs|status|build|shell|clean}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  build   - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑"
        echo "  shell   - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        echo "  clean   - –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
        ;;
esac